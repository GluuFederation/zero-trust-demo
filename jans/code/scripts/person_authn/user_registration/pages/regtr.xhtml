<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:b="http://bootsfaces.net/ui"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                template="/WEB-INF/incl/layout/login-template.xhtml">
    <f:metadata>
        <f:viewAction action="#{authenticator.prepareAuthenticationForStep}" />
        <f:viewParam name="login_hint" value="#{loginAction.loginHint}" />
    </f:metadata>
    <ui:define name="head">
        <meta name="description" content="Gluu, Inc." />
    </ui:define>
    <ui:define name="pageTitle">
        <h:outputText value="Registration" />
    </ui:define>
    <ui:define name="body">
        <div class="container" style="text-align: center">
            <h:panelGroup rendered="true">
                <div class="loginBox">
                <div class="logo"></div>
                <div style="height:75px"></div>
                    <div class="row">
                        <h:messages class="text-center" style="
                            color: #8b0000;
                            margin: 5px;
                            margin-left: 20px;
                            margin-top: 25px;
                            font-size: 20px;
                            " infoClass="text-center" errorClass="text-center" />
                    </div>
                    <b:form horizontal="true" id="loginForm" style="padding: 30px;" onsubmit="return validateFun()">
                        <h3 style="text-align: center;">Create your OpenSAS Account</h3>
                        <p style="text-align: left">All fields are required</p>
                        <div class="row" id="givenName" style="margin-top: 5px;">
                            <div class="col-12" style="margin-top: 6px;">
                                <input name="fnm" type="text" placeholder="First name" value="#{identity.getWorkingParameter('vufnm')}" class="form-control" autocomplete="off" />
                            </div>
                        </div>
                        <div class="row" id="sn" style="margin-top: 5px;">
                            <div class="col-12" style="margin-top: 6px;">
                                <input name="lnm" type="text" placeholder="Last name" value="#{identity.getWorkingParameter('vulnm')}" class="form-control" autocomplete="off" />
                            </div>
                        </div>
                        <div class="row" id="familyName" style="margin-top: 5px;">
                            <div class="col-12" style="margin-top: 6px;">
                                <input name="mnm" type="text" placeholder="Middle name" value="#{identity.getWorkingParameter('vumnm')}" class="form-control" autocomplete="off" />
                            </div>
                        </div>
                        <div class="row" id="mail" style="margin-top: 5px;">
                            <div class="col-12" style="margin-top: 6px;">
                                <input name="email" type="email" id="email" placeholder="Work email" style="padding-left:5px;" value="#{identity.getWorkingParameter('vumail')}" class="form-control" autocomplete="off" required="true" onfocusout="checkmail()" />
                                <p style="color: #8b0000;" id="mail_error_text"></p>
                            </div>
                        </div>
                         <div class="row" style="margin-top: 5px; padding:0px;">
                            <div class="col-5" style="margin-top: 6px; float:left;">
                               <input name="pass" type="password" id="password" placeholder="Password" value="#{identity.getWorkingParameter('vupass')}" style="width: 110%; margin-left: 0px;" class="form-control" autocomplete="off" required="true" />
                                <meter max="4" id="password-strength-meter" style="width: 80%; margin-top: 6px; align:left;"></meter>
                               
                            </div>
                            <div class="col-5" style="margin-top: 6px;">
                                <input name="repass" type="password" id="repassword" placeholder="Confirm Password" value="#{identity.getWorkingParameter('vurepass')}" style="width: 110%;" class="form-control" autocomplete="off" required="true" />
                                <p id="password-strength-text"></p>
                            </div>
                            <div class="col-2" style="margin-top: 6px;">
                                <span id="password-field" toggle="#password-field" class="fa fa-fw fa-eye field-icon toggle-password"></span>
                            </div>
                        </div>
                        <div class="row" style="padding-top: 5px;">
                            <div class="col-md-12">
                                <div class="form-group row">
                                     <div class="col-12"  style="margin-top: 6px;">
                                        <b:commandButton  id="smartCardButton" style="background-color: #F55E3C; color:white;"
                                            styleClass="btn col-sm-12" iconAwesome="fas fa-id-card" type="button"
                                            value="Add CAC/PIV Card" />
                                    </div>
                                </div>
                                <h:inputHidden id="platform" />
                            </div>
                        </div>
                        <p>#{identity.getWorkingParameter('externaluid')}</p>
                        <div class="row" style="margin-top: 5px; border: 1px solid #008b8b;">
                            <div class="col-40" style="width: 40%; margin-top: 6px;">
                              <div id="captcha" style="margin-left: 6px;" class="row"></div>
                            </div>
                            <button style="font-size:24px; border:none; background-color:white;" onclick="Captcha();"> <i class="fa fa-refresh"></i></button>
                            <div class="col-40" style="width: 40%; margin-top: 6px; margin-left: 10px;">
                                <input type="text" id="txtInput" style="height: 90%; font-size:30px" class="form-control" oncopy="return false" onpaste="return false" autocomplete="off" required="true" />
                            </div>
                        </div>
                        <div class="form-group row" style="margin-top: 20px; text-align: center;">
                            <div class="col-12"  style="margin-top: 6px;">
                                <b:commandButton id="loginButton" style="background-color: #00be79; color: white;" styleClass="btn col-sm-12" value="CreateAccount" iconAwesome="fa-sign-in" action="#{authenticator.authenticate}" />
                            </div>
                        </div>
                        <h:inputHidden id="platform" />
                    </b:form>
                </div>
            </h:panelGroup>
        </div>
        <style>
            .loginBox{
                display:inline-block;
                height:680px;
                width:440px;
                background:white;
                position:relative;
                top:120px;
                bottom:2px;
                border-radius: 10px; 
                margin-top: 0px;
                margin-bottom: 10px;
                border: 1px solid #008b8b;
                }
            .logo{
                position:absolute;
                height:200px;
                width:200px;
                border:3px solid white;
                left:50%;
                margin-left:-96px;
                top: -100px;
                background-size: contain;
                background-image: url("/jans-auth/ext/resources/img/logo.png");
            }            
        </style>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/zxcvbn/4.2.0/zxcvbn.js"></script>
        <script type="text/javascript">
            var passwordStrength;

            var code;
            var pass_regex;
            var email_regex;

            $(".toggle-password").click(function() {
                if ($("#password").prop("type") === "password" ) {
                    $("#password").prop("type","text");
                    $("#repassword").prop("type","text");
                    $("#password-field").removeClass("fa-eye");
                    $("#password-field").addClass("fa-eye-slash");
                } else {
                    $("#password").prop("type","password");
                    $("#repassword").prop("type","password");
                    $("#password-field").removeClass("fa-eye-slash");
                    $("#password-field").addClass("fa-eye");
                }
            });

            function checkmail() {
                var email = document.getElementById("email").value;
                var errortext = document.getElementById("mail_error_text");
                if (email.match(email_regex)) {
                    errortext.innerHTML = "";
                    return true;
                } else {
                    errortext.innerHTML = "Invalid email domain - Please enter a valid email";
                }
            }

            function start() {
                func1();
                getCaptcha();
                meter();
                initTogglePassword();
            }

            window.onload = start;

            function func1() {

                var ids = `#{identity.getWorkingParameter('ids')}`;

                passwordStrength = parseInt(
                    `#{identity.getWorkingParameter('passStrength')}`
                );

                email_regex = `#{identity.getWorkingParameter('mail_regex')}`;
                pass_regex = `#{identity.getWorkingParameter('pass_regex')}`;

                var idsArray = ids.split(",");

                var allIds = [
                    "givenName",
                    "familyName",
                    "sn",
                    "certificate",
                    "captcha_elem"
                ];

                removeIds = allIds.filter((el) => !idsArray.includes(el));

                for (var i in removeIds) document.getElementById(removeIds[i]).remove();
            }

            function getCaptcha() {
                document.getElementById("captcha").innerHTML = ""
                var a = Math.floor(100000 + Math.random() * 900000);
                var canv = document.createElement("canvas");
                canv.id = "captcha";
                canv.width = 120;
                canv.height = 70;
                var ctx = canv.getContext("2d");
                ctx.font = "35px Georgia";
                ctx.strokeText(a.toString(), 0, 30);
                code = a.toString();
                document.getElementById("captcha").appendChild(canv);

            }

            function meter() {

                var meter_value;

                var strength = {
                    0: "Worst ",
                    1: "Bad ",
                    2: "Weak ",
                    3: "Good ",
                    4: "Strong ",
                };

                var password = document.getElementById("password");
                var meter = document.getElementById("password-strength-meter");
                var text = document.getElementById("password-strength-text");

                var val = password.value;
                var result = zxcvbn(val);

                meter.value = result.score;
                meter_value = meter.value;
                // Update the text indicator
                if (val !== "") {
                    text.innerHTML = "Strength: " + strength[result.score];
                } else {
                    text.innerHTML = "";
                }

            }

            document.getElementById("password").addEventListener("input", getStrength);
            var meter_value;

            function getStrength() {

                var strength = {
                    0: "Worst ",
                    1: "Bad ",
                    2: "Weak ",
                    3: "Good ",
                    4: "Strong ",
                };

                var password = document.getElementById("password");
                var meter = document.getElementById("password-strength-meter");
                var text = document.getElementById("password-strength-text");

                var val = password.value;
                var result = zxcvbn(val);

                meter.value = result.score;
                meter_value = meter.value;
                // Update the text indicator
                if (val !== "") {
                    text.innerHTML = "Strength: " + strength[result.score];
                } else {
                    text.innerHTML = "";
                }
            }

            function validateFun() {

                var strength = {
                    0: "Worst ",
                    1: "Bad ",
                    2: "Weak ",
                    3: "Good ",
                    4: "Strong ",
                };

                var password = document.getElementById("password");
                var meter = document.getElementById("password-strength-meter");
                var text = document.getElementById("password-strength-text");

                var val = password.value;
                var result = zxcvbn(val);

                meter.value = result.score;
                meter_value = meter.value;
                // Update the text indicator
                if (val !== "") {
                    text.innerHTML = "Strength: " + strength[result.score];
                } else {
                    text.innerHTML = "";
                }
                //Checking Email domain

                //Checking password policies
                var passfield = document.getElementById("password").value;
                var repassfield = document.getElementById("repassword").value;
                var email = document.getElementById("email").value;

                //validate password and rpassword
                if (passfield != repassfield) {
                    alert("Password Field must match!!!");
                    return false;
                } else {
                    //validate password regex
                    if (passfield.match(new RegExp(pass_regex))) {
                        //validate email regex
                        if (email.match(email_regex)) {
                            //validate password strength
                            if (meter_value >= passwordStrength) {
                                //validate captcha
                                var string2 = document.getElementById("txtInput").value;
                                if (code == string2) {
                                    return true;
                                } else {
                                    alert("Invalid Captcha");
                                    return false;
                                }
                            } else {
                                alert("Your Password is weak! Try a different Password");
                                return false;
                            }
                        } else {
                            alert("Email domain invalid - Please check your email");
                            return false;
                        }
                    } else {
                        alert(
                            "Password must correspondent current password policy."
                        );
                        return false;
                    }
                }
            }

            function initTogglePassword() {
                if ($("#password").prop("type") === "password" ) {
                    $("#password-field").removeClass("fa-eye-slash");
                    $("#password-field").addClass("fa-eye");
                } else {
                    $("#password-field").removeClass("fa-eye");
                    $("#password-field").addClass("fa-eye-slash");
                }
            }

        </script>
    </ui:define>
</ui:composition>